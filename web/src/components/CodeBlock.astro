---
import 'prismjs/themes/prism-tomorrow.css'
import 'prismjs/components/prism-javascript'
import 'prismjs/components/prism-typescript'
import 'prismjs/components/prism-jsx'
import 'prismjs/components/prism-tsx'
import 'prismjs/components/prism-bash'
import 'prismjs/components/prism-json'
import 'prismjs/components/prism-css'
import 'prismjs/components/prism-markdown'
import 'prismjs/components/prism-python'
import 'prismjs/components/prism-go'
import 'prismjs/components/prism-sql'
import 'prismjs/components/prism-yaml'
import 'prismjs/components/prism-docker'
import 'prismjs/components/prism-git'

interface Props {
  code: string
  lang?: string
  filename?: string
}

const { code, lang = "text", filename } = Astro.props
---

<div class="code-block-wrapper group">
  <!-- 代码块头部 -->
  <div class="code-block-header">
    <div class="code-block-info">
      {filename && (
        <span class="filename">
          <svg class="file-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
            <polyline points="14,2 14,8 20,8"/>
          </svg>
          {filename}
        </span>
      )}
      <span class="language-badge">{lang}</span>
    </div>
    <button 
      class="copy-button" 
      data-code={code}
      title="复制代码"
      aria-label="复制代码到剪贴板"
    >
      <svg class="copy-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <rect x="9" y="9" width="13" height="13" rx="2" ry="2"/>
        <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"/>
      </svg>
      <svg class="check-icon hidden" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <polyline points="20,6 9,17 4,12"/>
      </svg>
    </button>
  </div>
  
  <!-- 代码内容 -->
  <pre class="code-block" data-language={lang}>
    <code>{code}</code>
  </pre>
</div>

<script>
  // 复制功能
  document.addEventListener('DOMContentLoaded', () => {
    const copyButtons = document.querySelectorAll('.copy-button')
    
    copyButtons.forEach(button => {
      button.addEventListener('click', async () => {
        const code = button.getAttribute('data-code')
        const copyIcon = button.querySelector('.copy-icon')
        const checkIcon = button.querySelector('.check-icon')
        
        try {
          await navigator.clipboard.writeText(code || '')
          
          // 显示成功状态
          copyIcon?.classList.add('hidden')
          checkIcon?.classList.remove('hidden')
          button.classList.add('copied')
          
          // 2秒后恢复
          setTimeout(() => {
            copyIcon?.classList.remove('hidden')
            checkIcon?.classList.add('hidden')
            button.classList.remove('copied')
          }, 2000)
        } catch (err) {
          console.error('复制失败:', err)
        }
      })
    })
  })
</script>

<style>
  .code-block-wrapper {
    @apply relative my-6 rounded-lg overflow-hidden border border-border;
    background: linear-gradient(135deg, var(--background) 0%, var(--secondary) 100%);
    box-shadow: 
      0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -1px rgba(0, 0, 0, 0.06);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .code-block-wrapper:hover {
    transform: translateY(-2px);
    box-shadow: 
      0 10px 15px -3px rgba(0, 0, 0, 0.1),
      0 4px 6px -2px rgba(0, 0, 0, 0.05);
  }

  /* 代码块头部 */
  .code-block-header {
    @apply flex items-center justify-between px-4 py-3 bg-secondary/50 border-b border-border;
    backdrop-filter: blur(8px);
  }

  .code-block-info {
    @apply flex items-center gap-3;
  }

  .filename {
    @apply flex items-center gap-1.5 text-sm font-medium text-foreground;
  }

  .file-icon {
    @apply w-4 h-4 text-muted-foreground;
  }

  .language-badge {
    @apply px-2 py-1 text-xs font-mono font-medium rounded-md;
    background: linear-gradient(135deg, var(--primary) 0%, var(--accent) 100%);
    color: var(--primary-foreground);
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  }

  /* 复制按钮 */
  .copy-button {
    @apply flex items-center justify-center w-8 h-8 rounded-md transition-all duration-200;
    background: var(--background);
    border: 1px solid var(--border);
    color: var(--muted-foreground);
  }

  .copy-button:hover {
    @apply scale-105;
    background: var(--primary);
    color: var(--primary-foreground);
    border-color: var(--primary);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .copy-button:active {
    @apply scale-95;
  }

  .copy-button.copied {
    background: var(--success);
    color: var(--success-foreground);
    border-color: var(--success);
  }

  .copy-icon, .check-icon {
    @apply w-4 h-4 transition-all duration-200;
  }

  .hidden {
    display: none;
  }

  /* 代码内容 */
  .code-block {
    @apply p-4 m-0 overflow-x-auto text-sm leading-relaxed;
    background: var(--background);
    font-family: 'JetBrains Mono', 'Fira Code', 'Monaco', 'Consolas', monospace;
  }

  .code-block code {
    @apply text-foreground;
    background: transparent;
    border: none;
    padding: 0;
  }

  /* 语法高亮主题 - 明亮主题 */
  .light .code-block {
    background: #f8fafc;
  }

  .light .code-block-wrapper {
    border-color: #e2e8f0;
    box-shadow: 
      0 4px 6px -1px rgba(0, 0, 0, 0.05),
      0 2px 4px -1px rgba(0, 0, 0, 0.03);
  }

  .light .code-block-header {
    background: rgba(241, 245, 249, 0.8);
    border-color: #e2e8f0;
  }

  .light .copy-button {
    background: #ffffff;
    border-color: #e2e8f0;
    color: #64748b;
  }

  .light .copy-button:hover {
    background: #3b82f6;
    color: #ffffff;
    border-color: #3b82f6;
  }

  /* 语法高亮主题 - 暗色主题 */
  .dark .code-block {
    background: #0f172a;
  }

  .dark .code-block-wrapper {
    border-color: #334155;
    box-shadow: 
      0 4px 6px -1px rgba(0, 0, 0, 0.3),
      0 2px 4px -1px rgba(0, 0, 0, 0.2);
  }

  .dark .code-block-header {
    background: rgba(30, 41, 59, 0.8);
    border-color: #334155;
  }

  .dark .copy-button {
    background: #1e293b;
    border-color: #334155;
    color: #94a3b8;
  }

  .dark .copy-button:hover {
    background: #3b82f6;
    color: #ffffff;
    border-color: #3b82f6;
  }

  /* 滚动条样式 */
  .code-block::-webkit-scrollbar {
    height: 6px;
  }

  .code-block::-webkit-scrollbar-track {
    background: transparent;
  }

  .code-block::-webkit-scrollbar-thumb {
    @apply rounded-full;
    background: var(--border);
  }

  .code-block::-webkit-scrollbar-thumb:hover {
    background: var(--muted-foreground);
  }

  /* 响应式设计 */
  @media (max-width: 768px) {
    .code-block-wrapper {
      @apply mx-2;
    }
    
    .code-block-header {
      @apply px-3 py-2;
    }
    
    .code-block {
      @apply p-3 text-xs;
    }
    
    .filename {
      @apply text-xs;
    }
    
    .language-badge {
      @apply px-1.5 py-0.5 text-xs;
    }
  }

  /* 动画效果 */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .code-block-wrapper {
    animation: fadeInUp 0.3s ease-out;
  }

  /* 成功状态动画 */
  @keyframes checkmark {
    0% {
      transform: scale(0);
      opacity: 0;
    }
    50% {
      transform: scale(1.2);
      opacity: 1;
    }
    100% {
      transform: scale(1);
      opacity: 1;
    }
  }

  .copy-button.copied .check-icon {
    animation: checkmark 0.3s ease-out;
  }
</style> 