---
import { getCollection } from 'astro:content'
import Layout from '@/layouts/Layout.astro'
import { Calendar, Tag } from 'lucide-react'

const PAGE_SIZE = 14

export async function getStaticPaths() {
  const PAGE_SIZE = 14
  const posts = await getCollection('blog')
  const totalPages = Math.max(1, Math.ceil(posts.length / PAGE_SIZE))
  return Array.from({ length: totalPages }).map((_, i) => ({
    params: { page: String(i + 1) }
  }))
}

const { page } = Astro.params
const pageNum = Number(page) || 1

const posts = await getCollection('blog')
const sortedPosts = posts.sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime())
const totalPages = Math.max(1, Math.ceil(sortedPosts.length / PAGE_SIZE))
const paginatedPosts = sortedPosts.slice((pageNum - 1) * PAGE_SIZE, pageNum * PAGE_SIZE)

const leftColumn = paginatedPosts.filter((_, i) => i % 2 === 0)
const rightColumn = paginatedPosts.filter((_, i) => i % 2 === 1)
---

<Layout title="博客文章">
  <div class="max-w-4xl mx-auto">
    <header class="mb-8">
      <h1 class="text-3xl font-bold mb-4">博客文章</h1>
      <p class="text-lg text-muted-foreground">分享技术学习心得和项目经验</p>
    </header>

    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
      <div class="flex flex-col gap-4">
        {leftColumn.map((post) => (
          <a
            href={`/blog/${post.slug}`}
            class="group relative block rounded-md p-3 transition-colors duration-300 hover:bg-secondary leading-tight w-full focus:outline-none"
          >
            <div class="flex items-end underline-offset-4 transition-transform group-hover:-translate-y-0.5 group-hover:underline leading-tight w-full">
              <span class="font-medium truncate">{post.data.title}</span>
            </div>
            <div class="mt-2 text-sm text-muted-foreground break-words group-hover:text-foreground leading-tight">
              {post.data.description}
            </div>
            <div class="mt-2 flex items-center gap-4 text-xs text-muted-foreground">
              <div class="flex items-center gap-1">
                <Calendar size={12} />
                <span>{new Date(post.data.pubDate).toLocaleDateString('zh-CN')}</span>
              </div>
              {post.data.tags && post.data.tags.length > 0 && (
                <div class="flex items-center gap-1">
                  <Tag size={12} />
                  <span>{post.data.tags.join(", ")}</span>
                </div>
              )}
            </div>
          </a>
        ))}
      </div>
      <div class="flex flex-col gap-4">
        {rightColumn.map((post) => (
          <a
            href={`/blog/${post.slug}`}
            class="group relative block rounded-md p-3 transition-colors duration-300 hover:bg-secondary leading-tight w-full focus:outline-none"
          >
            <div class="flex items-end underline-offset-4 transition-transform group-hover:-translate-y-0.5 group-hover:underline leading-tight w-full">
              <span class="font-medium truncate">{post.data.title}</span>
            </div>
            <div class="mt-2 text-sm text-muted-foreground break-words group-hover:text-foreground leading-tight">
              {post.data.description}
            </div>
            <div class="mt-2 flex items-center gap-4 text-xs text-muted-foreground">
              <div class="flex items-center gap-1">
                <Calendar size={12} />
                <span>{new Date(post.data.pubDate).toLocaleDateString('zh-CN')}</span>
              </div>
              {post.data.tags && post.data.tags.length > 0 && (
                <div class="flex items-center gap-1">
                  <Tag size={12} />
                  <span>{post.data.tags.join(", ")}</span>
                </div>
              )}
            </div>
          </a>
        ))}
      </div>
      <div class="sm:col-span-2 flex justify-center mt-8">
        {pageNum > 1 && (
          <a href={`/blog/${pageNum - 1}`} class="px-3 py-1 border rounded hover:bg-secondary">上一页</a>
        )}
        <span class="px-3 py-1">{pageNum} / {totalPages}</span>
        {pageNum < totalPages && (
          <a href={`/blog/${pageNum + 1}`} class="px-3 py-1 border rounded hover:bg-secondary">下一页</a>
        )}
      </div>
    </div>

    {paginatedPosts.length === 0 && (
      <div class="text-center py-12">
        <p class="text-muted-foreground">暂无博客文章</p>
      </div>
    )}
  </div>
</Layout> 